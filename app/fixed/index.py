from flask import Flask, render_template, request
import string

# Configuraciones del servidor
app = Flask(__name__)
app.config.from_object(__name__)

# Se declara un conjunto de caracteres válidos para las operaciones.
whitelist_set = set(string.digits + '.' + '/' + '*' + '+' + '-' + '%' + '(' + ')')


# Ruta inicial
@app.route('/')
def welcome():
    # Se renderiza el form inicial.
    return render_template('form.html')


# Ruta para mostrar el resultado
@app.route('/result', methods=['POST'])
def result():
    # Se recibe por medio del request a la ruta la operacion ingresada por el usuario.
    operation = request.form.get("operation", type=str)

    # Se le aplica la función is_valid a la operación ingresada por el usuario para validar que esta sólo contenga
    # caracteres válidos.
    if is_valid(operation):
        # De ser válida, el valor de entry corresponde al resultado de hacer eval() a la operacion.
        entry = eval(operation)
    else:
        # De lo contrario, el valor de entry corresponde al string "Syntax_Error".
        entry = "Syntax_Error"

    # Se renderiza el result.html con entry como entrada
    return render_template('result.html', entry=entry)


# función para verificar que la entrada del usuario solo contenga caracteres válidos.
def is_valid(test_str):
    # Se convierte en conjunto el parámetro y se revisa que el conjunto obtenido sea subconjunto del whitelist definido.
    return set(test_str) <= whitelist_set


app.run(host='0.0.0.0', port=5050)
